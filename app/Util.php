<?php
function memToBytes( $val ) {
  $val = trim( $val );
  switch( $val[strlen($val)-1] ) {
  case 'G': case 'g':
    $val *= 1024; // fallthru...
  case 'M': case 'm':
    $val *= 1024; // fallthru...
  case 'K': case 'k':
    $val *= 1024;
  }
  return $val;
}

// There is a tradeoff in compressing: reduced load on the database
// server but greater decompression load on the http server.  I'm
// guessing that at least 70% reduction in size is needed before
// compression is a net gain.  For PDF and DOCX files (and any
// images), compression is pointless, as these documents are already
// compressed.  For inline-text, compression is usually unnecessary
// UNLESS the text is generated by pasting from MSWord (in which case
// compression can make a large difference).  Note that the cost of
// performing a trial compression here is not so significant, as it is
// a one-off cost.
function maybeCompress( $str ) {
  $isCompressed = false;
  if( strlen( $str ) > 2048 ) {
    //- Anything smaller than a modest packet size is probably not
    //- worth bothering with.
    $s = gzcompress( $str, 9 );
    if( strlen( $s ) < strlen($str) * 0.7 ) {
      $str = $s;
      $isCompressed = true;
    }
  }
  return array( $isCompressed, $str );
}
